## Test Automation について

React で生成した Web UI から、Python の Selenium コードを自動生成して、それをバックエンドで実行できるようにしたい。

#### React でのデータ構造

主なデータ構造は、6種類。
	→ 1 : 変数定義 / 2: If文 / 3 : While文 / 7 : 文字チェック
	  4 : 変数代入(Xpath取得, 何個目か) / 5 : クリック(ページ遷移) / 6 : 文字入力(Xpath & 文字入力)
	→ 単独のものは、3, 4, 5, 6
	　文を含むものは、2, 3 (2の中では1, 2の文は・3の文では 1 ~ 3 の文は含まれない)

左右二つに分かれた UI で、右で新規作成・左で表示 & 詳細設定ができるようにする。

###### データ構造 UI設定

0 : 右
	1 ~ 6を選べる スクロールInput を作る

1 : 変数定義
	右：変数名 → 作成
	左：A : 番号, B : 変数名
2 : If 文
	右：A : 変数名, B : 文字列 → 作成
	左：A : 番号
	　　B : 「3 ~ 6 + 終了」 を選べる 追加 スクロールInput
	　　　→ クリックしたら、右から設定が行える。右の上に「If文(番号)を設定中と書く」
3 : While 文
	右：A : 回数 → 作成
	左：A : 番号
	　　B : 「4 ~ 6 + 終了」 を選べる 追加 スクロールInput
	　　　→ クリックしたら、右から設定が行える。右の上に「While文(番号)を設定中と書く」
4 : 変数代入
	右：A : Xpath名, B : 何個目か, C : 変数(スクロール表示)
	左：A : 番号, B : Xpath[n] & 変数名
5 : クリック
	右：A : Xpath名, B : 何個目か
	左：A : 番号, B : Xpath[n] クリック
6 : 文字入力
	右：A : Xpath名, B : 何個目か, C : 文字列 or 変数か選択, D : 文字列 or 変数
	左：A : 番号, B : Xpath[n] 文字列 or 変数
7 : 文字チェック
	右：A 変数名, B : 文字列, C : 等号など
	左：A : 番号, B : 変数 C 文字列 

###### データ構造 JSON

基本は、配列に 1〜6を代入し、2, 3 の 中身にのみ 内容の配列を追加する。


